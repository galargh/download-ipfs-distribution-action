name: 'Download IPFS Distribution'
description: 'Download executable from dist.ipfs.io'
inputs:
  name:
    description: 'Name of the distribution to download'
    required: true
    default: 'go-ipfs'
  version:
    description: 'Version of the distribution to download(defaults to latest stable version)'
    required: false
  working-directory:
    description: "Directory where the action is going to be performed"
    required: false
    default: '/tmp'
  install-directory:
    description: "Directory where the executable is going to be copied"
    required: true
    default: '/usr/local/bin'
outputs:
  executable:
    description: "The name of the executable"
    value: ${{ steps.system-info.outputs.os }}
runs:
  using: "composite"
  steps:
    - id: version-info
      run: |
        VERSION=${{ inputs.version }}
        if [ -z "$VERSION" ]; then
          VERSION=$(curl -s https://dist.ipfs.io/${{ inputs.name }}/versions | grep -v rc | tail -n 1)
        fi
        echo "version=$VERSION"
        echo "::set-output name=version::$VERSION"
      shell: bash
    - id: system-info
      run: |
        OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
        ARCH=$(echo ${{ runner.arch }} | tr '[:upper:]' '[:lower:]')
        case $OS in
          macos)
            OS="darwin"
            ;;
        esac
        case $ARCH in
          x86)
            ARCH="386"
            ;;
          x64)
            ARCH="amd64"
        esac
        echo "os=$OS"
        echo "arch=$ARCH"
        echo "::set-output name=os::$OS"
        echo "::set-output name=arch::$ARCH"
      shell: bash
    - id: dist-info
      run: |
        DIST=$(curl -s https://dist.ipfs.io/${{ inputs.name }}/${{ steps.version-info.outputs.version }}/dist.json)
        LINK=$(jq '.platforms.${{ steps.system-info.outputs.os }}.archs.${{ steps.system-info.outputs.arch }}.link' <<< $DIST)
        SHA512=$(jq '.platforms.${{ steps.system-info.outputs.os }}.archs.${{ steps.system-info.outputs.arch }}.sha512' <<< $DIST)
        echo "link=$LINK"
        echo "sha512=$SHA512"
        echo "::set-output name=link::$LINK)"
        echo "::set-output name=sha512::$SHA512)"
      shell: bash
